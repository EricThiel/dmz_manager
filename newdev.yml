---
- name: Create virtual devices
  hosts: dhcprouter
  gather_facts: no

  vars_files:
    - vars/vars.yml

  vars_prompt:
    - name: "devtype"
      prompt: "What type of device would you like to provision? Supported types include 'asa' and 'csr'"
      private: no
      when: devtype == null

  tasks:

  - name: make list 1
    debug: msg=""
    with_sequence: start="{{labinfo[devtype]['start']}}" count="{{labinfo[devtype]['count']}}"
    register: demo_list1

  - set_fact:
      router_list: "{{ demo_list1.results | map(attribute='item') | list }}"

  - name: Create DHCP reservations on router
    with_items: "{{router_list}}"
    ios_config:
      lines:
        - host {{labinfo['ipprefix']}}{{item}} {{labinfo['ipmask']}}
        - client-identifier {{labinfo['macprefixdhcp']}}{{labinfo[devtype]['macprefix']}}.{{item}}
      parents: ['ip dhcp pool {{devtype}}{{item}}']

  - name: Create VM from template
    with_items: "{{router_list}}"
    delegate_to: localhost
    vmware_guest:
      validate_certs: False
      hostname: "{{ vcenter_hostname }}"
      username: "{{ vcenter_user }}"
      password: "{{ vcenter_pass }}"
      esxi_hostname: "{{ esxhost }}"
      datacenter: Datacenter
      folder: /{{devtype}}farm
      name: "{{devtype}}{{ item }}"
      template: "{{labinfo[devtype]['vmtemplate']}}"
      networks:
        - name: "{{ network }}"
          mac: "{{labinfo['macprefixvm']}}{{labinfo[devtype]['macprefix']}}:{{item}}"
          start_connected: True
        - name: "{{ network }}"
          start_connected: True
        - name: "{{ network }}"
          start_connected: True
        - name: "{{ network }}"
          start_connected: True
        - name: "{{ network }}"
          start_connected: True
        - name: "{{ network }}"
          start_connected: True
        - name: "{{ network }}"
          start_connected: True
        - name: "{{ network }}"
          start_connected: True
        - name: "{{ network }}"
          start_connected: True
        - name: "{{ network }}"
          start_connected: True
      state: poweredon

  - set_fact:
      ansible_connection: local

  - name: Create ASA ssh objects
    with_items: "{{router_list}}"
    asa_config:
      lines:
        - host {{labinfo['ipprefix']}}{{item}}
      parents: ['object network {{devtype}}{{item}}-ssh']
      provider: "{{ asacli }}"

  - name: Add objects to device group
    with_items: "{{router_list}}"
    asa_config:
      lines:
        - network-object object {{devtype}}{{item}}-ssh
      parents: ['object-group network {{devtype}}farm']
      provider: "{{ asacli }}"

  - name: Add objects to device group
    with_items: "{{router_list}}"
    when: devtype == "csr"
    asa_config:
      lines:
        - network-object object {{devtype}}{{item}}-nc
      parents: ['object-group network {{devtype}}farm']
      provider: "{{ asacli }}"

  - name: Create ASA ssh NATs
    with_items: "{{router_list}}"
    asa_config:
      lines:
        -  nat (any,any) static {{labinfo['dmzipprefix']}}{{item[:1]}} service tcp ssh 500{{item[1:]}} 
      parents: ['object network {{devtype}}{{item}}-ssh']
      provider: "{{ asacli }}"

  - name: Create ASA netconf NATs
    with_items: "{{router_list}}"
    when: devtype == "csr"
    asa_config:
      lines:
        - nat (any,any) static {{labinfo['dmzipprefix']}}{{item[:1]}} service tcp 830 501{{item[1:]}}
      parents: ['object network {{devtype}}{{item}}-nc']
      provider: "{{ asacli }}"

  - name: Wait for devices to boot
    pause:
      minutes: 3

  - name: "Apply base {{devtype}} configs"
    include: "{{devtype}}.yml"

